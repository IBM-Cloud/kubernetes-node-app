apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-for-customdomain-https
  namespace: $KUBERNETES_NAMESPACE
  annotations:
    kubernetes.io/ingress.class: "public-iks-k8s-nginx"
spec:
  tls:
  - hosts:
    - $CUSTOM_SUBDOMAIN
    secretName: kubernetesnodeapp-certificate
  rules:
  - host: $CUSTOM_SUBDOMAIN
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: kubernetesnodeapp
            port:
              number: 3000
---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: kubernetesnodeapp-secretstore
spec:
  provider:
    ibm:
      serviceUrl: $SECRETS_MANAGER_URL
      auth:
        secretRef:
          secretApiKeySecretRef:
            name: kubernetesnodeapp-api-key
            key: apikey
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: kubernetesnodeapp-external-secret
spec:
  refreshInterval: 1m
  secretStoreRef:
    name: kubernetesnodeapp-secretstore
    kind: SecretStore
  target:
    name: kubernetesnodeapp-certificate
    template:
      type: kubernetes.io/tls
      data:
        tls.crt: '{{ .crt | toString }}'
        tls.key: '{{ .key | toString }}'
    creationPolicy: Owner
  data:
  - secretKey: crt
    remoteRef:
      key: $CERTIFICATE_TYPE/$CERTIFICATE_ID
      property: certificate
  - secretKey: key
    remoteRef:
      key: $CERTIFICATE_TYPE/$CERTIFICATE_ID
      property: private_key